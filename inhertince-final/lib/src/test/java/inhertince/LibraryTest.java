/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inhertince;

import inhertince.Library;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @DisplayName("this tests the ability to instantiate a new restaurant and review object")
    @Test
    void restaurantAndReviewCreation() {
        Restaurant restaurant1 = new Restaurant("KFC", "high");
        assertNotNull(restaurant1);
        assertEquals("KFC",restaurant1.getName());

        Review review1 = new Review("GREAT", "SOME GUY", 3);
        assertEquals("GREAT",review1.getBody());

        Review review2 = new Review("BAD", "SOME GUY", 1);

        restaurant1.addReview(review1);
        restaurant1.addReview(review2);

        assertEquals(2,restaurant1.getStarts());

    }
    @Test void shoptest(){
        Review shop =new Review("Good","Ghaida",3);
        assertEquals("Review{body='Good', author='Ghaida', numOfStarts=3}",shop.toString());
    }

    @Test void addingTest(){
        Shop shop =new Shop("Simply Cozmo Supermarket","grocery store",100);

        Review testing1=new Review("Good","rahmeh",7);
        shop.shopReview(testing1);
        assertEquals("[Review{body='Good', author='rahmeh', numOfStarts=2}]",shop.getReviewShop());


    }

    @Test
    void testingTheater() {
        Theater testing = new Theater("MO");

        assertEquals("Theater{name='MO', moviesName=[]}", testing.toString());
    }

    @Test
    void addtheaterReviewTest() {
        Review testing = new Review ("perfect","Ghaida", 2);

        assertEquals("Review{body='perfect', author='Ghaida', numOfStarts=2}", testing.toString());
    }
    @Test void addmovie(){
        Theater testing = new Theater("City");
        testing.addMovies("Lost");
        testing.addMovies("Happy Land");
        String expected="Theater{name='City', moviesName=[Lost, Happy Land]}";
        assertEquals(expected,testing.toString());
    }
    @Test void removeMovie(){
        Theater testing= new Theater("city");
        testing.addMovies("Lost");
        testing.addMovies("Happy Land");
        testing.removeMovies("Lost");
        String expected="Theater{name='city', moviesName=[Happy Land]}";
        assertEquals(expected,testing.toString());

    }
    @Test void addReview(){
        Theater testing =new Theater("City");
        Review review=new Review("veryGood","ghaida",3);
        testing.reviewTheater(review,"Lost");
        assertEquals("{Review{body='veryGood', author='ghaida', numOfStarts=3}=Lost}",testing.getReviewsForTheater().toString());
    }
}
